CREATE TABLE IF NOT EXISTS USERS
(
    USER_ID  INTEGER auto_increment,
    EMAIL    CHARACTER VARYING(255),
    LOGIN    CHARACTER VARYING(255) not null,
    NAME     CHARACTER VARYING(255),
    BIRTHDAY DATE,
    constraint USERS_PK
        primary key (USER_ID)
);

CREATE TABLE IF NOT EXISTS FILMS_RATING (
    MPA_ID INTEGER GENERATED BY DEFAULT AS IDENTITY,
    RATING_NAME CHARACTER VARYING(255),
    constraint FILMS_RATING_PK
         primary key (MPA_ID)
);

CREATE TABLE IF NOT EXISTS FILMS (
    FILM_ID LONG GENERATED BY DEFAULT AS IDENTITY,
    FILM_NAME CHARACTER VARYING(255),
    FILM_DESCRIPTION CHARACTER VARYING(255),
    FILM_RELEASEDATE DATE,
    FILM_DURATION INTEGER,
    MPA_ID INTEGER REFERENCES FILMS_RATING(MPA_ID),
    constraint FILMS_PK
        primary key (FILM_ID)
);


CREATE TABLE IF NOT EXISTS GENRE (
    GENRE_ID INTEGER GENERATED BY DEFAULT AS IDENTITY,
    GENRE_NAME CHARACTER VARYING(255),
    constraint GENRE_PK
        primary key (GENRE_ID)
);

CREATE TABLE IF NOT EXISTS FILM_GENRE (
    FILM_ID INTEGER REFERENCES FILMS(FILM_ID),
    GENRE_ID INTEGER REFERENCES GENRE(GENRE_ID),
    constraint FILM_GENRE_PK
        primary key (FILM_ID,GENRE_ID)
);

--CREATE TABLE IF NOT EXISTS FRIENDSHIP_STATUS (
    --STATUS_ID INTEGER GENERATED BY DEFAULT AS IDENTITY,
    --FRIENDSHIP_NAME CHARACTER VARYING(255),
    --constraint FRIENDSHIP_STATUS_PK
       -- primary key (STATUS_ID)
--);

CREATE TABLE IF NOT EXISTS FRIENDSHIP (
     USER_ID INTEGER REFERENCES USERS(USER_ID),
     FRIEND_ID INTEGER REFERENCES USERS(USER_ID),
     --STATUS_ID INTEGER REFERENCES FRIENDSHIP_STATUS(STATUS_ID),
     constraint FRIENDSHIP_PK
        primary key (USER_ID,FRIEND_ID)
);

CREATE TABLE IF NOT EXISTS LIKES (
     USER_ID INTEGER REFERENCES USERS(USER_ID),
     FILM_ID INTEGER REFERENCES FILMS(FILM_ID),
     constraint LIKES_PK
        primary key (USER_ID,FILM_ID)
);




